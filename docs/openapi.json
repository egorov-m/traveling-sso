{"openapi": "3.1.0", "info": {"title": "SSO \u2014 Single Sign-On Service", "description": "Authorization, authentication, user info microservice.", "version": "0.0.1"}, "servers": [{"url": "http://localhost:80", "description": "Local server"}, {"url": "http://0.0.0.0:80", "description": "Current server"}], "paths": {"/api/v1/auth/signin": {"post": {"tags": ["Auth"], "summary": "Signin", "operationId": "signin_api_v1_auth_signin_post", "parameters": [{"name": "client_id", "in": "query", "required": true, "schema": {"type": "string", "minLength": 48, "maxLength": 48, "title": "Client Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SignInFormSchema"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TokenResponseSchema"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/auth/signup": {"post": {"tags": ["Auth"], "summary": "Signup", "operationId": "signup_api_v1_auth_signup_post", "parameters": [{"name": "client_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "minLength": 48, "maxLength": 48}, {"type": "null"}], "description": "Transmit to get the tokens right away.", "title": "Client Id"}, "description": "Transmit to get the tokens right away."}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SignUpFormSchema"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/TokenResponseSchema"}, {"type": "null"}], "title": "Response Signup Api V1 Auth Signup Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/auth/logout": {"post": {"tags": ["Auth"], "summary": "Logout session", "description": "A refresh token revoke will be performed, similar to `/session/revoke`.", "operationId": "logout_api_v1_auth_logout_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "boolean", "title": "Response Logout Api V1 Auth Logout Post"}}}}}, "security": [{"Access token": []}]}}, "/api/v1/auth/session/revoke": {"post": {"tags": ["Auth"], "summary": "Revoke refresh token", "operationId": "revoke_session_api_v1_auth_session_revoke_post", "security": [{"Access token": []}], "parameters": [{"name": "session_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "description": "Pass the session_id you want to revoke, otherwise the current token will be revoked.", "title": "Session Id"}, "description": "Pass the session_id you want to revoke, otherwise the current token will be revoked."}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "boolean", "title": "Response Revoke Session Api V1 Auth Session Revoke Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/auth/session/refresh": {"post": {"tags": ["Auth"], "summary": "Refresh access token", "operationId": "refresh_session_api_v1_auth_session_refresh_post", "parameters": [{"name": "x-sso-refresh-token", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "X-Sso-Refresh-Token"}}, {"name": "sso_refresh_token", "in": "cookie", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Sso Refresh Token"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TokenResponseSchema"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/user/me/info": {"get": {"tags": ["User (me)"], "summary": "Get Userinfo", "description": "Get base information about the user.", "operationId": "info_api_v1_user_me_info_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSchema"}}}}}, "security": [{"Access token": []}]}, "patch": {"tags": ["User (me)"], "summary": "Update Userinfo", "description": "Update base information about the user.", "operationId": "update_info_api_v1_user_me_info_patch", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateUserInfoRequestSchema"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSchema"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"Access token": []}]}}, "/api/v1/user/me/documents/{document_type}": {"get": {"tags": ["User (me)"], "summary": "Get Document", "description": "Get document data.", "operationId": "get_document_api_v1_user_me_documents__document_type__get", "security": [{"Access token": []}], "parameters": [{"name": "document_type", "in": "path", "required": true, "schema": {"$ref": "#/components/schemas/GetDocumentTypeSlug"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/PassportRfSchema"}, {"$ref": "#/components/schemas/ForeignPassportRfSchema"}, {"type": "object", "additionalProperties": {"anyOf": [{"$ref": "#/components/schemas/PassportRfSchema"}, {"$ref": "#/components/schemas/ForeignPassportRfSchema"}, {"type": "null"}]}}, {"type": "null"}], "title": "Response Get Document Api V1 User Me Documents  Document Type  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["User (me)"], "summary": "Add document", "operationId": "create_document_api_v1_user_me_documents__document_type__post", "security": [{"Access token": []}], "parameters": [{"name": "document_type", "in": "path", "required": true, "schema": {"$ref": "#/components/schemas/DocumentTypeSlug"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/CreatePassportRfResponseSchema"}, {"$ref": "#/components/schemas/CreateForeignPassportRfResponseSchema"}], "description": "Document data to be added.", "title": "Document Data"}}}}, "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/PassportRfSchema"}, {"$ref": "#/components/schemas/ForeignPassportRfSchema"}], "title": "Response Create Document Api V1 User Me Documents  Document Type  Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/user/me/documents/passport_rf": {"patch": {"tags": ["User (me)"], "summary": "Update Passport RF", "operationId": "update_passport_rf_api_v1_user_me_documents_passport_rf_patch", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/UpdatePassportRfResponseSchema"}], "title": "Passport Rf", "description": "Passport data to be updated."}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PassportRfSchema"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"Access token": []}]}}, "/api/v1/user/me/documents/foreign_passport_rf": {"patch": {"tags": ["User (me)"], "summary": "Update Foreign Passport RF", "operationId": "update_foreign_passport_rf_api_v1_user_me_documents_foreign_passport_rf_patch", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/UpdateForeignPassportRfResponseSchema"}], "title": "Passport Rf", "description": "Foreign Passport data to be updated."}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ForeignPassportRfSchema"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"Access token": []}]}}, "/api/v1/user/me/sessions": {"get": {"tags": ["User (me)"], "summary": "Get user sessions", "operationId": "get_sessions_api_v1_user_me_sessions_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/TokenSessionSchema"}, "type": "array", "title": "Response Get Sessions Api V1 User Me Sessions Get"}}}}}, "security": [{"Access token": []}]}}, "/api/v1/server/about": {"get": {"tags": ["Server"], "summary": "Get info about the server", "operationId": "about_api_v1_server_about_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AboutSchema"}}}}}}}, "/api/v1/server/health": {"get": {"tags": ["Server"], "summary": "Health Check", "operationId": "health_api_v1_server_health_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HealthSchema"}}}}}}}}, "components": {"schemas": {"AboutSchema": {"properties": {"name": {"type": "string", "title": "Name"}, "description": {"type": "string", "title": "Description"}, "version": {"type": "string", "title": "Version"}}, "type": "object", "required": ["name", "description", "version"], "title": "AboutSchema"}, "CreateForeignPassportRfResponseSchema": {"properties": {"number": {"type": "string", "maxLength": 20, "title": "Number"}, "first_name": {"type": "string", "maxLength": 512, "title": "First Name"}, "first_name_latin": {"type": "string", "maxLength": 512, "title": "First Name Latin"}, "last_name": {"type": "string", "maxLength": 512, "title": "Last Name"}, "last_name_latin": {"type": "string", "maxLength": 512, "title": "Last Name Latin"}, "second_name": {"anyOf": [{"type": "string", "maxLength": 512}, {"type": "null"}], "title": "Second Name"}, "citizenship": {"type": "string", "maxLength": 50, "title": "Citizenship"}, "citizenship_latin": {"type": "string", "maxLength": 50, "title": "Citizenship Latin"}, "birth_date": {"type": "string", "format": "date", "title": "Birth Date"}, "birth_place": {"type": "string", "maxLength": 255, "title": "Birth Place"}, "birth_place_latin": {"type": "string", "maxLength": 255, "title": "Birth Place Latin"}, "gender": {"type": "string", "enum": ["\u041c", "\u0416"], "title": "Gender"}, "issued_by": {"type": "string", "maxLength": 255, "title": "Issued By"}, "issue_date": {"type": "string", "format": "date", "title": "Issue Date"}, "expiry_date": {"type": "string", "format": "date", "title": "Expiry Date"}}, "type": "object", "required": ["number", "first_name", "first_name_latin", "last_name", "last_name_latin", "citizenship", "citizenship_latin", "birth_date", "birth_place", "birth_place_latin", "gender", "issued_by", "issue_date", "expiry_date"], "title": "CreateForeignPassportRfResponseSchema"}, "CreatePassportRfResponseSchema": {"properties": {"series": {"type": "string", "maxLength": 4, "minLength": 4, "title": "Series"}, "number": {"type": "string", "maxLength": 6, "minLength": 6, "title": "Number"}, "first_name": {"type": "string", "maxLength": 512, "title": "First Name"}, "last_name": {"type": "string", "maxLength": 512, "title": "Last Name"}, "second_name": {"anyOf": [{"type": "string", "maxLength": 512}, {"type": "null"}], "title": "Second Name"}, "birth_date": {"type": "string", "format": "date", "title": "Birth Date"}, "birth_place": {"type": "string", "maxLength": 255, "title": "Birth Place"}, "gender": {"type": "string", "enum": ["\u041c", "\u0416"], "title": "Gender"}, "issued_by": {"type": "string", "maxLength": 255, "title": "Issued By"}, "division_code": {"type": "string", "maxLength": 10, "title": "Division Code"}, "issue_date": {"type": "string", "format": "date", "title": "Issue Date"}, "registration_address": {"type": "string", "maxLength": 255, "title": "Registration Address"}}, "type": "object", "required": ["series", "number", "first_name", "last_name", "birth_date", "birth_place", "gender", "issued_by", "division_code", "issue_date", "registration_address"], "title": "CreatePassportRfResponseSchema"}, "DocumentType": {"type": "string", "enum": ["passport_rf", "foreign_passport_rf"], "title": "DocumentType"}, "DocumentTypeSlug": {"type": "string", "enum": ["passport_rf", "foreign_passport_rf"], "title": "DocumentTypeSlug"}, "ForeignPassportRfSchema": {"properties": {"number": {"type": "string", "maxLength": 20, "title": "Number"}, "first_name": {"type": "string", "maxLength": 512, "title": "First Name"}, "first_name_latin": {"type": "string", "maxLength": 512, "title": "First Name Latin"}, "last_name": {"type": "string", "maxLength": 512, "title": "Last Name"}, "last_name_latin": {"type": "string", "maxLength": 512, "title": "Last Name Latin"}, "second_name": {"anyOf": [{"type": "string", "maxLength": 512}, {"type": "null"}], "title": "Second Name"}, "citizenship": {"type": "string", "maxLength": 50, "title": "Citizenship"}, "citizenship_latin": {"type": "string", "maxLength": 50, "title": "Citizenship Latin"}, "birth_date": {"type": "string", "format": "date", "title": "Birth Date"}, "birth_place": {"type": "string", "maxLength": 255, "title": "Birth Place"}, "birth_place_latin": {"type": "string", "maxLength": 255, "title": "Birth Place Latin"}, "gender": {"type": "string", "enum": ["\u041c", "\u0416"], "title": "Gender"}, "issued_by": {"type": "string", "maxLength": 255, "title": "Issued By"}, "issue_date": {"type": "string", "format": "date", "title": "Issue Date"}, "expiry_date": {"type": "string", "format": "date", "title": "Expiry Date"}, "is_verified": {"type": "boolean", "title": "Is Verified"}, "create_at": {"type": "string", "format": "date-time", "title": "Create At"}, "update_at": {"type": "string", "format": "date-time", "title": "Update At"}}, "type": "object", "required": ["number", "first_name", "first_name_latin", "last_name", "last_name_latin", "citizenship", "citizenship_latin", "birth_date", "birth_place", "birth_place_latin", "gender", "issued_by", "issue_date", "expiry_date", "is_verified", "create_at", "update_at"], "title": "ForeignPassportRfSchema"}, "GetDocumentTypeSlug": {"type": "string", "enum": ["passport_rf", "foreign_passport_rf", "all"], "title": "GetDocumentTypeSlug"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "HealthSchema": {"properties": {"status": {"type": "string", "title": "Status"}}, "type": "object", "required": ["status"], "title": "HealthSchema"}, "PassportRfSchema": {"properties": {"series": {"type": "string", "maxLength": 4, "minLength": 4, "title": "Series"}, "number": {"type": "string", "maxLength": 6, "minLength": 6, "title": "Number"}, "first_name": {"type": "string", "maxLength": 512, "title": "First Name"}, "last_name": {"type": "string", "maxLength": 512, "title": "Last Name"}, "second_name": {"anyOf": [{"type": "string", "maxLength": 512}, {"type": "null"}], "title": "Second Name"}, "birth_date": {"type": "string", "format": "date", "title": "Birth Date"}, "birth_place": {"type": "string", "maxLength": 255, "title": "Birth Place"}, "gender": {"type": "string", "enum": ["\u041c", "\u0416"], "title": "Gender"}, "issued_by": {"type": "string", "maxLength": 255, "title": "Issued By"}, "division_code": {"type": "string", "maxLength": 10, "title": "Division Code"}, "issue_date": {"type": "string", "format": "date", "title": "Issue Date"}, "registration_address": {"type": "string", "maxLength": 255, "title": "Registration Address"}, "is_verified": {"type": "boolean", "title": "Is Verified"}, "create_at": {"type": "string", "format": "date-time", "title": "Create At"}, "update_at": {"type": "string", "format": "date-time", "title": "Update At"}}, "type": "object", "required": ["series", "number", "first_name", "last_name", "birth_date", "birth_place", "gender", "issued_by", "division_code", "issue_date", "registration_address", "is_verified", "create_at", "update_at"], "title": "PassportRfSchema"}, "SignInFormSchema": {"properties": {"login": {"anyOf": [{"type": "string", "format": "email"}, {"type": "string", "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$"}], "title": "Login", "description": "Username or email for login"}, "password": {"type": "string", "title": "Password"}}, "type": "object", "required": ["login", "password"], "title": "SignInFormSchema"}, "SignUpFormSchema": {"properties": {"email": {"type": "string", "format": "email", "title": "Email"}, "password": {"type": "string", "maxLength": 255, "minLength": 8, "title": "Password"}}, "type": "object", "required": ["email", "password"], "title": "SignUpFormSchema"}, "TokenResponseSchema": {"properties": {"access_token": {"type": "string", "title": "Access Token"}, "refresh_token": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Refresh Token"}, "token_type": {"allOf": [{"$ref": "#/components/schemas/TokenType"}], "default": "Bearer"}, "expires": {"type": "integer", "title": "Expires", "description": "Expires of refresh token."}}, "type": "object", "required": ["access_token", "expires"], "title": "TokenResponseSchema"}, "TokenSessionSchema": {"properties": {"session_id": {"type": "string", "format": "uuid", "title": "Session Id"}, "issued_at": {"type": "integer", "title": "Issued At"}, "expires_at": {"type": "integer", "title": "Expires At"}, "is_current": {"type": "boolean", "title": "Is Current", "default": false}}, "type": "object", "required": ["session_id", "issued_at", "expires_at"], "title": "TokenSessionSchema"}, "TokenType": {"type": "string", "enum": ["Bearer"], "const": "Bearer", "title": "TokenType"}, "UpdateForeignPassportRfResponseSchema": {"properties": {"number": {"anyOf": [{"type": "string", "maxLength": 20}, {"type": "null"}], "title": "Number"}, "first_name": {"anyOf": [{"type": "string", "maxLength": 512}, {"type": "null"}], "title": "First Name"}, "first_name_latin": {"anyOf": [{"type": "string", "maxLength": 512}, {"type": "null"}], "title": "First Name Latin"}, "last_name": {"anyOf": [{"type": "string", "maxLength": 512}, {"type": "null"}], "title": "Last Name"}, "last_name_latin": {"anyOf": [{"type": "string", "maxLength": 512}, {"type": "null"}], "title": "Last Name Latin"}, "second_name": {"anyOf": [{"type": "string", "maxLength": 512}, {"type": "null"}], "title": "Second Name"}, "citizenship": {"anyOf": [{"type": "string", "maxLength": 50}, {"type": "null"}], "title": "Citizenship"}, "citizenship_latin": {"anyOf": [{"type": "string", "maxLength": 50}, {"type": "null"}], "title": "Citizenship Latin"}, "birth_date": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Birth Date"}, "birth_place": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Birth Place"}, "birth_place_latin": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Birth Place Latin"}, "gender": {"anyOf": [{"type": "string", "enum": ["\u041c", "\u0416"]}, {"type": "null"}], "title": "Gender"}, "issued_by": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Issued By"}, "issue_date": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Issue Date"}, "expiry_date": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Expiry Date"}}, "type": "object", "title": "UpdateForeignPassportRfResponseSchema"}, "UpdatePassportRfResponseSchema": {"properties": {"series": {"anyOf": [{"type": "string", "maxLength": 4, "minLength": 4}, {"type": "null"}], "title": "Series"}, "number": {"anyOf": [{"type": "string", "maxLength": 6, "minLength": 6}, {"type": "null"}], "title": "Number"}, "first_name": {"anyOf": [{"type": "string", "maxLength": 512}, {"type": "null"}], "title": "First Name"}, "last_name": {"anyOf": [{"type": "string", "maxLength": 512}, {"type": "null"}], "title": "Last Name"}, "second_name": {"anyOf": [{"type": "string", "maxLength": 512}, {"type": "null"}], "title": "Second Name"}, "birth_date": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Birth Date"}, "birth_place": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Birth Place"}, "gender": {"anyOf": [{"type": "string", "enum": ["\u041c", "\u0416"]}, {"type": "null"}], "title": "Gender"}, "issued_by": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Issued By"}, "division_code": {"anyOf": [{"type": "string", "maxLength": 10}, {"type": "null"}], "title": "Division Code"}, "issue_date": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Issue Date"}, "registration_address": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Registration Address"}}, "type": "object", "title": "UpdatePassportRfResponseSchema"}, "UpdateUserInfoRequestSchema": {"properties": {"email": {"anyOf": [{"type": "string", "format": "email"}, {"type": "null"}], "title": "Email"}, "username": {"anyOf": [{"type": "string", "pattern": "^[a-zA-Z0-9_]{5,32}$"}, {"type": "null"}], "title": "Username"}, "password": {"anyOf": [{"type": "string", "maxLength": 255, "minLength": 8}, {"type": "null"}], "title": "Password"}}, "type": "object", "title": "UpdateUserInfoRequestSchema"}, "UserRoleType": {"type": "string", "enum": ["user", "admin"], "title": "UserRoleType"}, "UserSchema": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "email": {"type": "string", "format": "email", "title": "Email"}, "username": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Username"}, "role": {"$ref": "#/components/schemas/UserRoleType"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "is_passport_rf": {"type": "boolean", "title": "Is Passport Rf", "default": false}, "is_foreign_passport": {"type": "boolean", "title": "Is Foreign Passport", "default": false}}, "type": "object", "required": ["id", "email", "role", "created_at", "updated_at"], "title": "UserSchema"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}, "securitySchemes": {"Access token": {"type": "http", "description": "Access token in jwt format.", "scheme": "bearer"}}}}